

struct aura_instance {}
struct aura_library {}
struct aura_co {}
struct aura_var {}
struct aura_thread {}


aura_context* context = aura_context_create(aura_context);

void aura_resume(aura_co* instance, );
void aura_suspend(aura_co* instance);
bool aura_yield(aura_co* instance, void* data, size_t* len, size_t len);


aura_result
aura_call(aura_co* instance, char* data, size_t max_size, aura_type* type = NULL);

aura_loadfile_async(aura_context* context, const char* path);
aura_load_async(aura_context* context, char** string);


struct aura_context;

aura_result aura_call(aura_block* function, aura_co* instance, )

